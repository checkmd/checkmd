// Generated by CoffeeScript 1.6.2
(function() {
  define(['jquery', 'handlebars', 'backbone', 'backbone-forms', 'bb_forms_list', 'bb_forms_inline', 'text!templates/index.html', 'text!templates/checklist.html', 'collections/checklists', 'models/checklist'], function($, Handlebars, Backbone, Form, FormList, FormInlineNestedModel, indexTemplate, checklistTemplate, ChecklistCollection, Checklist) {
    var IndexView;

    return IndexView = Backbone.View.extend({
      el: $("#index-container"),
      events: {
        "click input#add-checklist": "addStep"
      },
      initialize: function() {
        var _this = this;

        this.template = Handlebars.compile(indexTemplate);
        this.checklistTemplate = Handlebars.compile(checklistTemplate);
        this.checklistCollection = new ChecklistCollection();
        this.checklistCollection.fetch({
          success: function() {
            return _this.addChecklists();
          }
        });
        this.newChecklistForm = new Backbone.Form({
          model: new Checklist()
        });
        return this.newChecklistForm.render();
      },
      render: function() {
        this.$el.append(this.newChecklistForm.el);
        this.$el.append($("<input type='button' value='click me' id='add-checklist'></input>"));
        return this.$el.append(this.template);
      },
      addChecklists: function() {
        var checklists,
          _this = this;

        checklists = [];
        this.checklistCollection.forEach(function(checklist) {
          var el;

          el = $('<li></li>').append(_this.checklistTemplate(checklist.toJSON()));
          return checklists.push(el);
        });
        return this.$('ul#checklists').append(checklists);
      },
      addStep: function() {
        var errors;

        errors = this.newChecklistForm.commit({
          validate: true
        });
        if (!errors) {
          return this.newChecklistForm.model.save();
        }
      }
    });
  });

}).call(this);
